{"version":3,"sources":["stores/jobDispatcher.js","stores/JobParameters.js","utils/ActionDelayer.js","components/SequenceInput.js","components/Cite.js","components/SequenceStatus.js","components/SequenceHighlighter.js","utils/Graphics.js","components/FeatureViewer/FeatureViewer.js","components/Features.js","components/App.js","serviceWorker.js","stores/analyticsPageMiddleware.js","stores/index.js","index.js"],"names":["connect","_ref","jobParameters","dispatch","bindActionCreators","action","a","status","INVALID","LOADING","NULL","MULTIPLESEQUENCES","FASTA","AA","UNIPROT","isValid","incomingStatus","needsIndexing","initial","proteinStatus","protein","undefined","JobParameters","state","arguments","length","type","Object","objectSpread","payload","GLOBAL_TTE","actions","SequenceInput","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","loadSequence","event","fillerProtein","Protein","setUniprotData","accession","setState","proteinSequenceInput","jobParametersAction","proteinStatusAction","handleChange","bind","assertThisInitialized","deleyedKeyUp","_this2","textInput","retrievingFunction","autodetect","then","_ref2","slicedToArray","proteins","uniprotData","parser","validInput","parsers","fasta","protein_name","aa","console","error","catch","e","signature","TTE","target","value","clearTimeout","setTimeout","classes","react_default","createElement","Paper_default","square","elevation","className","paper","core_Typography_default","variant","container","noValidate","autoComplete","TextField_default","id","multiline","data-gramm_editor","textField","onChange","margin","autoFocus","component","classnames","underline","onClick","React","Component","storeComponentWrapper","withStyles","theme","display","flexWrap","width","height","mixins","gutters","paddingTop","paddingBottom","textDecoration","Cite","root","title","href","ref","overflowX","spacing","unit","paddingLeft","paddingRight","cursor","textAlign","topSpace","SequenceStatus","nextProps","grid","avatar","Avatar_default","greenAvatar","Check_default","content","color","rel","CardHeader_default","subheader","redAvatar","Close_default","CircularProgress_default","grayLoading","orangeAvatar","InfoOutlined_default","backgroundColor","green","red","orange","alignItems","flex","marginRight","SequenceHighlighter","get10mersAsReactComponents","string","replace","toUpperCase","split","filter","Boolean","map","ten_emer","position","pos","key","style","slice","toConsumableArray","letter","border","fontSize","borderStyle","borderColor","proteinColorScheme","breakMersAsReactComponents","reactComponentsArray","size","newArr","push","splice","elements","selected","region","highlightOnClick","newProps","proteinColorSchemes","dssp8","primary","+","G","H","I","B","E","S","T","C","contrast","disorder","-","X","mview",".","A","V","L","M","F","Y","W","P","K","R","D","Q","N","Z","?","*","U","FeatureViewer","findIndexes","letters","result","j","indices","i","findRanges","array","sort","ranges","x","y","currentRange","data","ft","window","sequence","showAxis","showSequence","brushActive","toolbar","bubbleHelp","zoomMax","clearInstance","document","getElementById","innerHTML","predictedDisorder","addFeature","name","secondaryStructure3","predictedDSSP3","minHeight","ULR","placeholder","predictedSubcellularLocalizations","predictedMembrane","predictedBPO","GO:XXXXXXXX","GO:XXXXXXX","predictedCCO","predictedMFO","predictedDSSP8","Features","getFeatures","loading","fetch","method","mode","cache","credentials","headers","Content-Type","redirect","referrer","body","JSON","stringify","response","json","features","filler","Grid_default","item","xs","Typography_default","text","titles","sequenceHighlighter","components_SequenceHighlighter","md","xl","keys","components_FeatureViewer_FeatureViewer","ExpansionPanel_default","ExpansionPanelSummary_default","expandIcon","ExpandMore_default","expansionPanels","ExpansionPanelDetails_default","constrainedPaper","minWidth","uniprotRegex","App","query","valid","ready","timeout","onQueryChange","test","onInputChange","search","marginTop","marginBottom","components_SequenceInput","components_SequenceStatus","components_Features","components_Cite","attribution","maxWidth","fadingComponents","transition","location","hostname","match","options","currentPage","reducer","combineReducers","store","createStore","applyMiddleware","getState","next","ReactGa","category","nextPage","concat","pathname","page","ReactGA","set","pageview","initialize","process","REACT_GA","ReactDOM","render","es","MuiThemeProvider_default","components_App","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.6d1e0de3.chunk.js","sourcesContent":["import { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = ({ jobParameters }) =>\n    ({ jobParameters });\n\nconst mapDispatchToProps = function (dispatch) {\n    return bindActionCreators({\n        action: (a) => {\n            return a\n        },\n    }, dispatch)\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps);","const status = {\n    INVALID: 0,\n    LOADING: 2,\n    NULL: 3,\n\n    // Protein input type\n    MULTIPLESEQUENCES: 4,\n    FASTA: 5,\n    AA: 6,\n    UNIPROT: 7,\n\n    isValid: (incomingStatus) => {\n        return incomingStatus === status.UNIPROT || incomingStatus === status.AA || incomingStatus === status.FASTA ||\n            incomingStatus === status.MULTIPLESEQUENCES\n    },\n    needsIndexing: (incomingStatus) => {\n        return incomingStatus === status.AA || incomingStatus === status.FASTA || incomingStatus === status.MULTIPLESEQUENCES\n    },\n};\n\nconst initial = {\n    // sequenceInput component\n    proteinStatus: status.NULL,\n    protein: undefined,\n};\n\n\nfunction JobParameters(state = initial, action) {\n    switch (action.type) {\n        case 'SET_PROTEIN_STATUS':\n            return {\n                ...state,\n                proteinStatus: action.payload.proteinStatus\n            };\n        case 'SET_PROTEIN_OBJECT':\n            return {\n                ...state,\n                protein: action.payload.protein\n            };\n        case 'SET_JOB_PARAMETERS':\n            return {\n                ...state,\n                ...action.payload\n            };\n        case 'RESET_JOB_SUBMISSION':\n            return initial;\n\n        default:\n            return state;\n    }\n}\n\nexport default JobParameters;\n\nexport const proteinStatus = status;","/***\n *\n * The purpose of this file is to expose functions that allow for a certain action (a function) to happen at a delayed point in time.\n *\n * Actions are be rewritable, meaning that: if an action with the same signature is enqueued for execution,\n * it will cancel the execution of the previous enqueued action with the same signature.\n *\n * In other words: it is a collection of single-slot queues.\n */\n\n\n// Time elapsing in ms before an action is taken\nconst GLOBAL_TTE = 1000;\n\nlet actions = {};\n\n\n/***\n *\n * @param signature: unique key representing request\n * @param action: a function\n * @param TTE: time to execute in MS\n */\nexport default function delay(signature, action, TTE) {\n    if (actions[signature] !== null) {\n        clearTimeout(actions[signature]);\n    }\n\n    actions[signature] = setTimeout(() => {\n        action()\n    }, TTE || GLOBAL_TTE);\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { Protein, autodetect, validInput, parsers } from 'protein-parser';\nimport storeComponentWrapper from '../stores/jobDispatcher'\nimport {proteinStatus} from \"../stores/JobParameters\";\nimport delay from \"../utils/ActionDelayer\";\nimport classnames from 'classnames';\n\nconst styles = theme => ({\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    textField: {\n        width: \"100%\",\n        height: \"100%\"\n    },\n    paper: theme.mixins.gutters({\n        paddingTop: 16,\n        paddingBottom: 16\n    }),\n    underline: {\n        textDecoration: \"underline\"\n    }\n});\n\nclass SequenceInput extends React.Component {\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            proteinSequenceInput: ''\n        };\n\n        this.proteinStatusAction = \"SET_PROTEIN_STATUS\";\n        this.jobParametersAction = \"SET_JOB_PARAMETERS\";\n\n        this.handleChange = this.handleChange.bind(this);\n        this.deleyedKeyUp = this.deleyedKeyUp.bind(this);\n    }\n\n    componentWillUnmount(){\n        this.props.action({\n            type: \"RESET_JOB_SUBMISSION\"\n        });\n    }\n\n    handleChange() {\n        let textInput = this.state.proteinSequenceInput;\n\n        if(textInput.length < 3){\n            this.props.action({\n                type: this.proteinStatusAction,\n                payload: {\n                    proteinStatus: proteinStatus.INVALID\n                }\n            });\n            return;\n        }\n\n        // It's going to be !== undefined only if a valid sequence or UniProt accession\n        let retrievingFunction = autodetect(textInput);\n\n        if(retrievingFunction !== undefined){\n            retrievingFunction(textInput)\n                .then(([proteins, _]) => {\n                    if(proteins.length > 1 && proteins[0] !== undefined){\n                        if(proteins[0].uniprotData !== undefined){\n                            this.props.action({\n                                type: this.jobParametersAction,\n                                payload: {\n                                    protein: proteins[0],\n                                    proteinStatus: proteinStatus.UNIPROT\n                                }\n                            });\n                        } else {\n                            this.props.action({\n                                type: this.jobParametersAction,\n                                payload: {\n                                    protein: proteins[0],\n                                    proteinStatus: proteinStatus.MULTIPLESEQUENCES\n                                }\n                            });\n                        }\n                    } else if(proteins[0] !== undefined){\n\n                        let parser = validInput(textInput);\n\n                        if(parser === parsers.accession){\n                            this.props.action({\n                                type: this.jobParametersAction,\n                                payload: {\n                                    protein: proteins[0],\n                                    proteinStatus: proteinStatus.UNIPROT\n                                }\n                            });\n                        } else if(parser === parsers.fasta){\n                            if(proteins[0].uniprotData !== undefined){\n                                this.props.action({\n                                    type: this.jobParametersAction,\n                                    payload: {\n                                        protein: proteins[0],\n                                        proteinStatus: proteinStatus.UNIPROT\n                                    }\n                                });\n                            } else {\n                                this.props.action({\n                                    type: this.jobParametersAction,\n                                    payload: {\n                                        protein: proteins[0],\n                                        proteinStatus: proteinStatus.FASTA\n                                    }\n                                });\n                            }\n                        } else if(parser === parsers.protein_name){\n                            this.props.action({\n                                type: this.jobParametersAction,\n                                payload: {\n                                    protein: proteins[0],\n                                    proteinStatus: proteinStatus.UNIPROT\n                                }\n                            });\n                        } else if(parser === parsers.aa){\n                            this.props.action({\n                                type: this.jobParametersAction,\n                                payload: {\n                                    protein: proteins[0],\n                                    proteinStatus: proteinStatus.AA\n                                }\n                            });\n                        } else {\n                            console.error(\"Unexpected error when validating protein retrieving function\");\n                            this.props.action({\n                                type: \"SET_PROTEIN_STATUS\",\n                                payload: {\n                                    proteinStatus: proteinStatus.INVALID\n                                }\n                            });\n                        }\n                    } else {\n\n                        this.props.action({\n                            type: this.jobParametersAction,\n                            payload: {\n                                proteinStatus: proteinStatus.INVALID\n                            }\n                        });\n                    }\n                })\n                .catch((e) => {\n                    console.error(e);\n\n                    this.props.action({\n                        type: this.jobParametersAction,\n                        payload: {\n                            proteinStatus: proteinStatus.INVALID\n                        }\n                    });\n                });\n        } else {\n            this.props.action({\n                type: this.jobParametersAction,\n                payload: {\n                    proteinStatus: proteinStatus.INVALID\n                }\n            });\n        }\n    }\n\n    loadSequence = type => event => {\n        let fillerProtein =  new Protein(\"MALLHSARVLSGVASAFHPGLAAAASARASSWWAHVEMGPPDPILGVTEAYKRDTNSKKMNLGVGAYRDDNGKPYVLPSVRKAEAQIAAKGLDKEYLPIGGLAEFCRASAELALGENSEVVKSGRFVTVQTISGTGALRIGASFLQRFFKFSRDVFLPKPSWGNHTPIFRDAGMQLQSYRYYDPKTCGFDFTGALEDISKIPEQSVLLLHACAHNPTGVDPRPEQWKEIATVVKKRNLFAFFDMAYQGFASGDGDKDAWAVRHFIEQGINVCLCQSYAKNMGLYGERVGAFTVICKDADEAKRVESQLKILIRPMYSNPPIHGARIASTILTSPDLRKQWLQEVKGMADRIIGMRTQLVSNLKKEGSTHSWQHITDQIGMFCFTGLKPEQVERLTKEFSIYMTKDGRISVAGVTSGNVGYLAHAIHQVTK\");\n\n        fillerProtein.setUniprotData({\n            accession: \"P12345\"\n        });\n\n        switch (type) {\n            case 'fasta':\n                this.setState({\n                    proteinSequenceInput: `>My sequence\nMALLHSARVLSGVASAFHPGLAAAASARASSWWAHVEMGPPDPILGVTEAYKRDTNSKKM\nNLGVGAYRDDNGKPYVLPSVRKAEAQIAAKGLDKEYLPIGGLAEFCRASAELALGENSEV\nVKSGRFVTVQTISGTGALRIGASFLQRFFKFSRDVFLPKPSWGNHTPIFRDAGMQLQSYR\nYYDPKTCGFDFTGALEDISKIPEQSVLLLHACAHNPTGVDPRPEQWKEIATVVKKRNLFA\nFFDMAYQGFASGDGDKDAWAVRHFIEQGINVCLCQSYAKNMGLYGERVGAFTVICKDADE\nAKRVESQLKILIRPMYSNPPIHGARIASTILTSPDLRKQWLQEVKGMADRIIGMRTQLVS\nNLKKEGSTHSWQHITDQIGMFCFTGLKPEQVERLTKEFSIYMTKDGRISVAGVTSGNVGY\nLAHAIHQVTK`,\n                });\n                this.props.action({\n                    type: this.jobParametersAction,\n                    payload: {\n                        proteinStatus: proteinStatus.FASTA,\n                        protein: fillerProtein\n                    }\n                });\n                break;\n\n            case 'aa':\n                this.setState({\n                    proteinSequenceInput: \"MALLHSARVLSGVASAFHPGLAAAASARASSWWAHVEMGPPDPILGVTEAYKRDTNSKKMNLGVGAYRDDNGKPYVLPSVRKAEAQIAAKGLDKEYLPIGGLAEFCRASAELALGENSEVVKSGRFVTVQTISGTGALRIGASFLQRFFKFSRDVFLPKPSWGNHTPIFRDAGMQLQSYRYYDPKTCGFDFTGALEDISKIPEQSVLLLHACAHNPTGVDPRPEQWKEIATVVKKRNLFAFFDMAYQGFASGDGDKDAWAVRHFIEQGINVCLCQSYAKNMGLYGERVGAFTVICKDADEAKRVESQLKILIRPMYSNPPIHGARIASTILTSPDLRKQWLQEVKGMADRIIGMRTQLVSNLKKEGSTHSWQHITDQIGMFCFTGLKPEQVERLTKEFSIYMTKDGRISVAGVTSGNVGYLAHAIHQVTK\",\n                });\n                this.props.action({\n                    type: this.jobParametersAction,\n                    payload: {\n                        proteinStatus: proteinStatus.AA,\n                        protein: fillerProtein\n                    }\n                });\n                break;\n\n            case 'accession':\n                this.setState({\n                    proteinSequenceInput: \"P12345\",\n                });\n                this.props.action({\n                    type: this.jobParametersAction,\n                    payload: {\n                        proteinStatus: proteinStatus.UNIPROT,\n                        protein: fillerProtein\n                    }\n                });\n                break;\n            case 'protein_name':\n                this.setState({\n                    proteinSequenceInput: \"AATM_RABIT\",\n                });\n                this.props.action({\n                    type: this.jobParametersAction,\n                    payload: {\n                        proteinStatus: proteinStatus.UNIPROT,\n                        protein: fillerProtein\n                    }\n                });\n                break;\n            default:\n                break;\n        }\n    };\n\n    deleyedKeyUp(event) {\n\n        this.setState({\n            proteinSequenceInput: event.target.value\n        });\n\n        if(this.props.jobParameters.proteinStatus !== proteinStatus.LOADING){\n            this.props.action({\n                type: this.proteinStatusAction,\n                payload: {\n                    proteinStatus: proteinStatus.LOADING\n                }\n            });\n        }\n\n        delay(\"SEQUENCE_INPUT_CHANGE\", this.handleChange, 1000);\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <Paper square elevation={2} className={classes.paper}>\n                <Typography variant=\"h6\">\n                    Sequence:\n                </Typography>\n                <form className={classes.container} noValidate autoComplete=\"off\">\n                    <TextField\n                        id=\"proteinSequenceInput\"\n                        multiline\n                        data-gramm_editor={false}\n                        className={classes.textField}\n                        value={this.state.proteinSequenceInput}\n                        onChange={this.deleyedKeyUp}\n                        margin=\"normal\"\n                        autoFocus\n                    />\n                </form>\n                <Typography component={\"div\"} variant=\"body1\">\n                    {'Sequence can be in '}\n                    <strong className={classnames(\"pointer\", classes.underline)} onClick={this.loadSequence('fasta')}>{\"FASTA format\"}</strong>\n                    {', a '}\n                    <strong className={classnames(\"pointer\", classes.underline)} onClick={this.loadSequence('accession')}>{\"UniProt Accession\"}</strong>\n                    {' number or '}\n                    <strong className={classnames(\"pointer\", classes.underline)} onClick={this.loadSequence('protein_name')}>{\"UniProt Protein Name\"}</strong>\n                    {', or  '}\n                    <strong className={classnames(\"pointer\", classes.underline)} onClick={this.loadSequence('aa')}>{\"AA sequence\"}</strong>\n                    .\n                </Typography>\n                <Typography component={\"div\"} variant=\"caption\">\n                    Click the bold text for examples.\n                </Typography>\n            </Paper>\n        );\n    }\n}\n\nSequenceInput.propTypes = {\n    action: PropTypes.func,\n    classes: PropTypes.object.isRequired,\n    jobParameters: PropTypes.object\n};\n\nexport default storeComponentWrapper(withStyles(styles)(SequenceInput));","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = theme => ({\n    root: {\n        overflowX: 'auto',\n        paddingBottom: theme.spacing.unit,\n        paddingLeft: theme.spacing.unit*5,\n        paddingRight: theme.spacing.unit*5\n    },\n    underline: {\n        textDecoration: \"underline\",\n        cursor: \"pointer\"\n    },\n    title: {\n        textAlign: \"center\",\n        paddingTop: theme.spacing.unit\n    },\n    topSpace: {\n        paddingTop: theme.spacing.unit*2,\n        paddingBottom: theme.spacing.unit\n\n    }\n});\n\nclass Cite extends React.Component {\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <Paper className={classes.root}>\n                <Typography className={classes.title} variant={\"h6\"}>\n                    Cite & Resources\n                </Typography>\n                <Typography variant={\"body2\"}>\n                    bio_embeddings: python package & pipeline for embedding generation:\n                </Typography>\n                <Typography>\n                    This package includes SeqVec and new language models. Prediction for supervised features (secondary structure and sub-cellular localization) are available. Soon, the pipeline will allow to calculate similarity-based predictions (e.g. GoPredSim). Link: <a href={\"https://github.com/sacdallago/bio_embeddings\"} target={\"_blank\"} ref={\"author\"}>https://github.com/sacdallago/bio_embeddings</a>.\n                </Typography>\n                <br/>\n                <Typography variant={\"body2\"}>\n                    GO annotations are predicted using GoPredSim:\n                </Typography>\n                <Typography>\n                    <a href={\"https://github.com/Rostlab/goPredSim\"} target={\"_blank\"} ref={\"author\"}>https://github.com/Rostlab/goPredSim</a>\n                </Typography>\n                <br/>\n                <Typography variant={\"body2\"}>\n                    Embeddings & secondary structure & subcellular location predictions on this website are calculated using models presented in:\n                </Typography>\n                <Typography>\n                    Heinzinger, M., Elnaggar, A., Wang, Y. et al. Modeling aspects of the language of life through transfer-learning protein sequences. BMC Bioinformatics 20, 723 (2019). <a target={\"_blank\"} ref={\"author\"} href={\"https://doi.org/10.1186/s12859-019-3220-8\"}>https://doi.org/10.1186/s12859-019-3220-8</a>\n                </Typography>\n            </Paper>\n        );\n    }\n}\n\nCite.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Cite);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport storeComponentWrapper from '../stores/jobDispatcher';\nimport { proteinStatus } from \"../stores/JobParameters\";\nimport Paper from '@material-ui/core/Paper';\nimport Avatar from '@material-ui/core/Avatar';\nimport Check from '@material-ui/icons/Check';\nimport Close from '@material-ui/icons/Close';\nimport Info from '@material-ui/icons/InfoOutlined';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Typography from '@material-ui/core/Typography';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport green from '@material-ui/core/colors/green';\nimport red from '@material-ui/core/colors/red';\nimport orange from '@material-ui/core/colors/orange';\n\nconst styles = theme => ({\n    greenAvatar: {\n        margin: 10,\n        color: '#fff',\n        backgroundColor: green[500],\n    },\n    redAvatar: {\n        margin: 10,\n        color: '#fff',\n        backgroundColor: red[500],\n    },\n    orangeAvatar: {\n        margin: 10,\n        color: '#fff',\n        backgroundColor: orange[500],\n    },\n    grayLoading: {\n        margin: 10,\n        color: '#aeaeae',\n        backgroundColor: 'inherit'\n    },\n    grid: theme.mixins.gutters({\n        display: 'flex',\n        alignItems: 'center',\n        paddingTop: theme.spacing.unit * 2,\n        paddingBottom: theme.spacing.unit * 2,\n    }),\n    avatar: {\n        flex: '0 0 auto',\n        marginRight: theme.spacing.unit * 2,\n    },\n    content: {\n        flex: '1 1 auto',\n    },\n});\n\n\nclass SequenceStatus extends React.Component {\n\n    constructor(props){\n        super(props);\n\n\n        this.state = {\n            proteinStatus: this.props.jobParameters.proteinStatus || proteinStatus.NULL,\n        };\n\n    }\n\n    componentWillReceiveProps(nextProps) {\n\n        let jobParameters = nextProps.jobParameters;\n\n        this.setState({\n            proteinStatus: jobParameters.proteinStatus,\n            protein: jobParameters.protein\n        })\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        switch (this.state.proteinStatus) {\n            case proteinStatus.UNIPROT:\n                return (<Paper square elevation={2} >\n                    <div className={classes.grid}>\n                        <div className={classes.avatar}>\n                            <Avatar className={classes.greenAvatar}>\n                                <Check />\n                            </Avatar>\n                        </div>\n                        <div className={classes.content}>\n                            <Typography variant={\"body2\"}\n                                        component=\"div\"\n                                        color=\"textSecondary\">\n                                Valid identifier passed. The sequence from {' '}\n                                <a\n                                    target=\"_blank\"\n                                    rel=\"noopener noreferrer\"\n                                    href={\"https://uniprot.org/uniprot/\" + (this.state.protein && this.state.protein.uniprotData ? this.state.protein.uniprotData.accession : \"P12345\")}>\n                                    {(this.state.protein && this.state.protein.uniprotData ? this.state.protein.uniprotData.accession : \"P12345\")}\n                                </a>\n                                {' '} will be used.\n                            </Typography>\n                        </div>\n                    </div>\n                </Paper>);\n            case proteinStatus.AA:\n            case proteinStatus.FASTA:\n                return (<Paper square elevation={2} >\n                    <CardHeader\n                        avatar={\n                            <Avatar className={classes.greenAvatar}>\n                                <Check />\n                            </Avatar>\n                        }\n                        subheader=\"Valid sequence passed.\"\n                    />\n                </Paper>);\n            case proteinStatus.INVALID:\n                return (<Paper square elevation={2} >\n                    <CardHeader\n                        avatar={\n                            <Avatar className={classes.redAvatar}>\n                                <Close />\n                            </Avatar>\n                        }\n                        subheader=\"Sorry, but it was not possible to identify your sequence or identifier.\"\n                    />\n                </Paper>);\n            case proteinStatus.LOADING:\n                return (<Paper square elevation={2} >\n                    <CardHeader\n                        avatar={\n                            <CircularProgress className={classes.grayLoading}/>\n                        }\n                        subheader=\"Checking validity.\"\n                    />\n                </Paper>);\n            case proteinStatus.MULTIPLESEQUENCES:\n                return (<Paper square elevation={2} >\n                    <CardHeader\n                        avatar={\n                            <Avatar className={classes.orangeAvatar}>\n                                <Check />\n                            </Avatar>\n                        }\n                        subheader=\"You inputted valid sequences, but only the first sequence will be considered.\"\n                    />\n                </Paper>);\n            default:\n                return <Paper square elevation={2} >\n                    <CardHeader\n                        avatar={\n                            <Avatar className={classes.grayLoading}>\n                                <Info />\n                            </Avatar>\n                        }\n                        subheader=\"Input a sequence to start!\"\n                    />\n                </Paper>\n        }\n    }\n}\n\nSequenceStatus.propTypes = {\n    classes: PropTypes.object.isRequired,\n    jobParameters: PropTypes.object\n};\n\nexport default storeComponentWrapper(withStyles(styles)(SequenceStatus));","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass SequenceHighlighter extends React.Component {\n\n    constructor(props){\n        super();\n\n        this.props = props;\n\n        this.state = {\n            selected: undefined,\n            region: [0,0],\n            highlightOnClick: false,\n            ...props\n        };\n    }\n\n    componentWillReceiveProps(newProps){\n        this.setState({\n            ...newProps\n        })\n    }\n\n    get10mersAsReactComponents = (string) => {\n        return string\n        // Remove spaces\n            .replace(/\\s/g,\"\")\n            // Make upper case\n            .toUpperCase()\n            // Split in 10-emers composed by letters\n            .split(/([A-Z|\\-|+]{10})/gm)\n            // Filter only populated 10-emers\n            .filter(Boolean)\n            // Append number to every 10-emer\n            .map( (ten_emer, position) => {\n                let pos = (position*10)+1;\n                return <span key={pos} style={{display: \"flex\"}}>\n                    <pre style={{margin:0}}>{\"      \".slice((\"\"+pos).length-6,6) + pos + ' '}</pre>\n                    {[...ten_emer].map((letter, position) => {\n\n                        let style = {\n                            margin:0,\n                            border: 0,\n                            fontSize: \"1.2rem\",\n                            borderStyle: \"solid\",\n                            borderColor: \"transparent\",\n                        };\n\n                        style.backgroundColor = this.state.proteinColorScheme['contrast'][letter];\n                        style.color = this.state.proteinColorScheme['primary'][letter];\n                        // style.borderStyle = \"solid\";\n\n                        return <pre style={style} key={position}>{letter}</pre>})}\n                </span>\n            })\n    };\n\n\n    breakMersAsReactComponents = (reactComponentsArray, size=1) => {\n        let newArr = [];\n        while(reactComponentsArray.length) newArr.push(reactComponentsArray.splice(0,size));\n\n        return newArr.map((elements, position) => <div key={position}>\n            {elements.map(e => e)}\n        </div>);\n    };\n\n    render() {\n        const { string } = this.props;\n\n        return (\n            <div style={{display: \"flex\", flexWrap: \"wrap\"}}>\n                {this.breakMersAsReactComponents(this.get10mersAsReactComponents(string)).map(e => e)}\n            </div>\n        )\n    }\n}\n\n\nSequenceHighlighter.propTypes = {\n    string: PropTypes.string.isRequired,\n    proteinColorScheme: PropTypes.object.isRequired\n};\n\nexport default SequenceHighlighter;","export const proteinColorSchemes = {\n    dssp8: {\n        primary : {\n            // placeholder\n            '+':'#ededed',\n\n            'G':'#ededed',\n            'H':'#ededed',\n            'I':'#ededed',\n            'B':'#ededed',\n            'E':'#ededed',\n            'S':'#ededed',\n            'T':'#ededed',\n            'C':'#ededed',\n        },\n        contrast : {\n            // placeholder\n            '+':'#ededed',\n\n            'G':'#8ad970',\n            'H':'#ccd96a',\n            'I':'#d99657',\n            'B':'#d95633',\n            'E':'#d958aa',\n            'S':'#6d3bd9',\n            'T':'#3f54d9',\n            'C':'#4cd9c2',\n        }\n    },\n    disorder: {\n        primary : {\n            // placeholder\n            '+':'#ededed',\n\n            '-':'#ededed',\n            'X':'#505050',\n        },\n        contrast : {\n            // placeholder\n            '+':'#ededed',\n\n            '-':'#ededed',\n            'X':'#505050',\n        }\n    },\n    mview: {\n        primary : {\n            // placeholder\n            '+':'#ededed',\n\n            '.':'#fafafa',\n            '-':'#fafafa',\n            'G':'#33cc00',\n            'A':'#33cc00',\n            'I':'#33cc00',\n            'V':'#33cc00',\n            'L':'#33cc00',\n            'M':'#33cc00',\n            'F':'#009900',\n            'Y':'#009900',\n            'W':'#009900',\n            'H':'#009900',\n            'C':'#ffff00',\n            'P':'#33cc00',\n            'K':'#cc0000',\n            'R':'#cc0000',\n            'D':'#0033ff',\n            'E':'#0033ff',\n            'Q':'#6600cc',\n            'N':'#6600cc',\n            'S':'#0099ff',\n            'T':'#0099ff',\n            'B':'#666666',\n            'Z':'#666666',\n            'X':'#666666',\n            '?':'#999999',\n            '*':'#666666',\n            'U':'#000000'\n        },\n        contrast : {\n            // placeholder\n            '+':'#ededed',\n\n            '.':'#fafafa',\n            '-':'#fafafa',\n            'G':'#fafafa',\n            'A':'#fafafa',\n            'I':'#fafafa',\n            'V':'#fafafa',\n            'L':'#fafafa',\n            'M':'#fafafa',\n            'F':'#fafafa',\n            'Y':'#fafafa',\n            'W':'#fafafa',\n            'H':'#fafafa',\n            'C':'#505050',\n            'P':'#fafafa',\n            'K':'#fafafa',\n            'R':'#fafafa',\n            'D':'#fafafa',\n            'E':'#fafafa',\n            'Q':'#fafafa',\n            'N':'#fafafa',\n            'S':'#fafafa',\n            'T':'#fafafa',\n            'B':'#fafafa',\n            'Z':'#fafafa',\n            'X':'#fafafa',\n            '?':'#fafafa',\n            '*':'#fafafa',\n            'U':'#fafafa'\n        }\n    },\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Paper from '@material-ui/core/Paper';\nimport { withStyles } from '@material-ui/core/styles';\nimport './featureViewer.scss';\n\nconst styles = theme => ({\n    paper: {\n        minHeight: 180\n    }\n});\n\nclass FeatureViewer extends React.Component {\n\n    componentDidMount(){\n        if(this.props.data !== null){\n            this.ft = new window.FeatureViewer(this.props.data.sequence,\n                '#fv1',\n                {\n                    showAxis: true,\n                    showSequence: true,\n                    brushActive: true, //zoom\n                    toolbar:true, //current zoom & mouse position\n                    bubbleHelp:true,\n                    zoomMax:50 //define the maximum range of the zoom\n                });\n        }\n    }\n\n    findIndexes = (string, letters) => {\n        let result = {};\n\n        for(let j=0; j<letters.length;j++) {\n            let indices = [];\n            for(let i=0; i<string.length;i++) {\n                if (string[i] === letters[j]) indices.push(i+1);\n            }\n            result[letters[j]] = indices;\n        }\n\n        return result;\n    };\n\n    findRanges = array => {\n        array.sort((e,i) => e-i);\n\n        let ranges = [{x: array[0], y: array[0]}];\n\n        for(let i=1; i<array.length; i++){\n            let currentRange = ranges[ranges.length-1];\n\n            if(array[i] <= currentRange.y+1){\n                currentRange.y = array[i];\n            } else {\n                ranges.push({x: array[i], y: array[i]});\n            }\n        }\n        return ranges;\n    };\n\n\n    componentWillReceiveProps(newProps){\n        if(newProps.data !== null){\n            this.ft && this.ft.clearInstance();\n            delete this.ft;\n            document.getElementById(\"fv1\").innerHTML = \"\";\n\n            this.ft = new window.FeatureViewer(newProps.data.sequence,\n                '#fv1',\n                {\n                    showAxis: true,\n                    showSequence: true,\n                    brushActive: true, //zoom\n                    toolbar:true, //current zoom & mouse position\n                    bubbleHelp:true,\n                    zoomMax:50 //define the maximum range of the zoom\n                });\n\n            let disorder = this.findIndexes(newProps.data.predictedDisorder, ['X']);\n\n            this.ft.addFeature({\n                data: this.findRanges(disorder['X']),\n                name: \"Disorder\",\n                color: \"#0F8292\",\n                type: \"rect\" // ['rect', 'path', 'line']\n            });\n\n            let secondaryStructure3 = this.findIndexes(newProps.data.predictedDSSP3, ['H', 'E', 'C']);\n\n            this.ft.addFeature({\n                data: this.findRanges(secondaryStructure3['H']),\n                name: \"DSSP3-Helix\",\n                color: \"#ccd96a\",\n                type: \"rect\" // ['rect', 'path', 'line']\n            });\n\n            this.ft.addFeature({\n                data: this.findRanges(secondaryStructure3['E']),\n                name: \"DSSP3-Sheet\",\n                color: \"#d958aa\",\n                type: \"rect\" // ['rect', 'path', 'line']\n            });\n\n            this.ft.addFeature({\n                data: this.findRanges(secondaryStructure3['C']),\n                name: \"DSSP3-Other\",\n                color: \"#4cd9c2\",\n                type: \"rect\" // ['rect', 'path', 'line']\n            });\n\n            // let secondaryStructure8 = this.findIndexes(newProps.data.predictedDSSP8, ['H', 'E', 'C', 'G', 'I', 'B', 'S', 'T']);\n            //\n            // this.ft.addFeature({\n            //     data: this.findRanges(secondaryStructure8['H']),\n            //     name: \"DSSP8-Helix\",\n            //     color: \"#ccd96a\",\n            //     type: \"rect\" // ['rect', 'path', 'line']\n            // });\n            //\n            // this.ft.addFeature({\n            //     data: this.findRanges(secondaryStructure8['E']),\n            //     name: \"DSSP8-Sheet\",\n            //     color: \"#d958aa\",\n            //     type: \"rect\" // ['rect', 'path', 'line']\n            // });\n            //\n            // this.ft.addFeature({\n            //     data: this.findRanges(secondaryStructure8['C']),\n            //     name: \"DSSP8-Other\",\n            //     color: \"#4cd9c2\",\n            //     type: \"rect\" // ['rect', 'path', 'line']\n            // });\n            //\n            // this.ft.addFeature({\n            //     data: this.findRanges(secondaryStructure8['G']),\n            //     name: \"DSSP8-G\",\n            //     color: \"#8ad970\",\n            //     type: \"rect\" // ['rect', 'path', 'line']\n            // });\n            //\n            // this.ft.addFeature({\n            //     data: this.findRanges(secondaryStructure8['I']),\n            //     name: \"DSSP8-I\",\n            //     color: \"#d99657\",\n            //     type: \"rect\" // ['rect', 'path', 'line']\n            // });\n            //\n            // this.ft.addFeature({\n            //     data: this.findRanges(secondaryStructure8['B']),\n            //     name: \"DSSP8-B\",\n            //     color: \"#d95633\",\n            //     type: \"rect\" // ['rect', 'path', 'line']\n            // });\n            //\n            // this.ft.addFeature({\n            //     data: this.findRanges(secondaryStructure8['S']),\n            //     name: \"DSSP8-S\",\n            //     color: \"#6d3bd9\",\n            //     type: \"rect\" // ['rect', 'path', 'line']\n            // });\n            //\n            // this.ft.addFeature({\n            //     data: this.findRanges(secondaryStructure8['T']),\n            //     name: \"DSSP8-T\",\n            //     color: \"#3f54d9\",\n            //     type: \"rect\" // ['rect', 'path', 'line']\n            // });\n        }\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <Paper className={classes.paper} elevation={0}>\n                <div className='use-bootstrap' id={\"fv1\"}>\n                </div>\n            </Paper>\n        );\n    }\n}\n\nFeatureViewer.propTypes = {\n    classes: PropTypes.object.isRequired,\n    data: PropTypes.object\n};\n\nexport default withStyles(styles)(FeatureViewer);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport storeComponentWrapper from '../stores/jobDispatcher';\nimport { proteinStatus } from \"../stores/JobParameters\";\nimport classnames from 'classnames';\nimport Paper from '@material-ui/core/Paper';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Grid from '@material-ui/core/Grid';\nimport SequenceHighlighter from \"./SequenceHighlighter\";\nimport {proteinColorSchemes} from \"../utils/Graphics\";\nimport Typography from \"@material-ui/core/Typography/Typography\";\nimport FeatureViewer from './FeatureViewer/FeatureViewer';\n\nconst styles = theme => ({\n    paper: {\n        overflowX: 'auto',\n        textAlign: \"center\",\n        paddingTop: theme.spacing.unit,\n        paddingBottom: theme.spacing.unit,\n    },\n    constrainedPaper: {\n        textAlign: \"center\",\n        paddingTop: theme.spacing.unit,\n        paddingBottom: theme.spacing.unit,\n    },\n    text: {\n        width: \"max-content\",\n        margin: \"auto\",\n    },\n    titles: {\n        minWidth: \"12em\"\n    },\n    expansionPanels: {\n        minWidth: \"18em\",\n    },\n    sequenceHighlighter: {\n        margin: 'auto',\n        paddingTop: theme.spacing.unit,\n        paddingLeft: theme.spacing.unit*3,\n        paddingRight: theme.spacing.unit*3,\n        paddingBottom: theme.spacing.unit,\n    },\n    filler: {\n        backgroundColor: \"#ededed\",\n        color: \"#ededed\"\n    }\n});\n\nconst ULR = \"https://api.embed.protein.properties/features\";\n\nconst placeholder = {\n    sequence: \"+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\",\n    predictedSubcellularLocalizations: \"++++++++++++++\",\n    predictedMembrane: \"++++++++++++\",\n    predictedBPO:{\"GO:XXXXXXXX\":0.28,\"GO:XXXXXXX\":0.28},\n    predictedCCO:{\"GO:XXXXXXXX\":0.28},\n    predictedMFO:{\"GO:XXXXXXXX\":0.28},\n    predictedDSSP3: \"+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\",\n    predictedDSSP8: \"+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\",\n    predictedDisorder: \"+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\",\n};\n\n\nclass Features extends React.Component {\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            proteinStatus: this.props.jobParameters.proteinStatus || proteinStatus.NULL,\n            sequence: null,\n            features: null,\n            loading: null\n        };\n    }\n\n    getFeatures = (sequence) => {\n        this.setState({\n            loading: true\n        }, () => {\n            fetch(ULR, {\n                method: \"POST\", // *GET, POST, PUT, DELETE, etc.\n                mode: \"cors\", // no-cors, cors, *same-origin\n                cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n                credentials: \"same-origin\", // include, *same-origin, omit\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                redirect: \"follow\", // manual, *follow, error\n                referrer: \"no-referrer\", // no-referrer, *client\n                body: JSON.stringify({\n                    \"sequence\": sequence\n                }), // body data type must match \"Content-Type\" header\n            })\n                .then(response => response.json())\n                .then(json => {\n                    this.setState({\n                        features: json,\n                        loading: false\n                    })\n                })\n                .catch(e => {\n                    console.error(e);\n                    this.setState({\n                        loading: false\n                    })\n                })\n            ;\n        });\n    };\n\n    componentWillReceiveProps(nextProps) {\n        let jobParameters = nextProps.jobParameters;\n\n        switch (jobParameters.proteinStatus) {\n            case proteinStatus.UNIPROT:\n            case proteinStatus.AA:\n            case proteinStatus.FASTA:\n            case proteinStatus.MULTIPLESEQUENCES:\n                this.getFeatures(jobParameters.protein.sequence);\n                break;\n            case proteinStatus.LOADING:\n            case proteinStatus.INVALID:\n            default:\n            // do nothing\n        }\n\n        this.setState({\n            proteinStatus: jobParameters.proteinStatus,\n            sequence: jobParameters.protein && jobParameters.protein.sequence\n        });\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        let features = this.state.loading || this.state.features === null ? placeholder : this.state.features;\n\n        let filler = this.state.loading || this.state.features === null;\n\n        return ( <div>\n                {this.state.loading !== null &&\n                <Grid container spacing={16}>\n                    <Grid item xs={12}>\n                        <Paper className={classes.paper} elevation={2}>\n                            <Typography className={classnames(classes.text, classes.titles, filler ? \"animated-background\" : null)} variant={\"h6\"}>\n                                Your sequence\n                            </Typography>\n                            <br/>\n                            <div className={classes.sequenceHighlighter}>\n                                <SequenceHighlighter string={this.state.loading || this.state.sequence === null ? placeholder.sequence : this.state.sequence} proteinColorScheme={proteinColorSchemes['mview']}/>\n                            </div>\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Paper className={classes.paper} elevation={2}>\n                            <Grid container spacing={0}>\n                                <Grid item xs={12}>\n                                    <Paper className={classes.paper} elevation={0}>\n                                        <Typography className={classnames(classes.text, filler ? classes.titles : null, filler ? \"animated-background\" : null)} variant={\"h6\"}>\n                                            Sequence predicted features\n                                        </Typography>\n                                    </Paper>\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <Paper className={classes.paper} elevation={0}>\n                                        <Typography className={classnames(classes.text, filler ? classes.titles : null, filler ? \"animated-background\" : null)} variant={\"h7\"}>\n                                            Via machine learning (SeqVec)\n                                        </Typography>\n                                    </Paper>\n                                </Grid>\n                                <Grid item md={6} xl={6} xs={12}>\n                                    <Paper className={classes.paper} elevation={0}>\n                                        <Typography className={classnames(classes.text, filler ? \"animated-background\" : null)} variant={\"caption\"}>\n                                            Sub-cellular location\n                                        </Typography>\n                                        <br/>\n                                        <Typography className={classnames(classes.text, filler ? classes.titles : null, filler ? \"animated-background\" : null)} variant={\"h6\"}>\n                                            {features.predictedSubcellularLocalizations}\n                                        </Typography>\n                                    </Paper>\n                                </Grid>\n                                <Grid item md={6} xl={6} xs={12}>\n                                    <Paper className={classes.paper} elevation={0}>\n                                        <Typography className={classnames(classes.text, filler ? \"animated-background\" : null)} variant={\"caption\"}>\n                                            Membrane bound\n                                        </Typography>\n                                        <br/>\n                                        <Typography className={classnames(classes.text, filler ? classes.titles : null, filler ? \"animated-background\" : null)} variant={\"h6\"}>\n                                            {features.predictedMembrane}\n                                        </Typography>\n                                    </Paper>\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <Paper className={classes.paper} elevation={0}>\n                                        <Typography className={classnames(classes.text, filler ? classes.titles : null, filler ? \"animated-background\" : null)} variant={\"h7\"}>\n                                            Via embedding similarity (GoPredSim)\n                                        </Typography>\n                                    </Paper>\n                                </Grid>\n                                <Grid item md={6} xl={6} xs={12}>\n                                    <Paper className={classes.paper} elevation={0}>\n                                        <Typography className={classnames(classes.text, filler ? \"animated-background\" : null)} variant={\"caption\"}>\n                                            Biological process (BPO)\n                                        </Typography>\n                                        <br/>\n                                        <table className={classnames(classes.text, filler ? classes.titles : null, filler ? \"animated-background\" : null)}>\n                                            <tr>\n                                                <th>Evidence code</th>\n                                                <th>Distance</th>\n                                            </tr>\n                                            {Object.keys(features.predictedBPO).map(e => <tr key={e}>\n                                                <td><a href={\"http://amigo.geneontology.org/amigo/term/\"+e} target={\"_blank\"}>{e}</a></td>\n                                                <td>{features.predictedBPO[e]}</td>\n                                            </tr>)}\n                                        </table>\n                                    </Paper>\n                                </Grid>\n                                <Grid item md={6} xl={6} xs={12}>\n                                    <Paper className={classes.paper} elevation={0}>\n                                        <Typography className={classnames(classes.text, filler ? \"animated-background\" : null)} variant={\"caption\"}>\n                                            Molecular function (MFO)\n                                        </Typography>\n                                        <br/>\n                                        <table className={classnames(classes.text, filler ? classes.titles : null, filler ? \"animated-background\" : null)}>\n                                            <tr>\n                                                <th>Evidence code</th>\n                                                <th>Distance</th>\n                                            </tr>\n                                            {Object.keys(features.predictedMFO).map(e => <tr key={e}>\n                                                <td><a href={\"http://amigo.geneontology.org/amigo/term/\"+e} target={\"_blank\"}>{e}</a></td>\n                                                <td>{features.predictedMFO[e]}</td>\n                                            </tr>)}\n                                        </table>\n                                    </Paper>\n                                </Grid>\n                                <Grid item md={6} xl={6} xs={12}>\n                                    <Paper className={classes.paper} elevation={0}>\n                                        <Typography className={classnames(classes.text, filler ? \"animated-background\" : null)} variant={\"caption\"}>\n                                            Cellular Component (CCO)\n                                        </Typography>\n                                        <br/>\n                                        <table className={classnames(classes.text, filler ? classes.titles : null, filler ? \"animated-background\" : null)}>\n                                            <tr>\n                                                <th>Evidence code</th>\n                                                <th>Distance</th>\n                                            </tr>\n                                            {Object.keys(features.predictedCCO).map(e => <tr key={e}>\n                                                <td><a href={\"http://amigo.geneontology.org/amigo/term/\"+e} target={\"_blank\"}>{e}</a></td>\n                                                <td>{features.predictedCCO[e]}</td>\n                                            </tr>)}\n                                        </table>\n                                    </Paper>\n                                </Grid>\n                            </Grid>\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Paper className={classes.paper} elevation={2}>\n                            <Paper className={classes.paper} elevation={0}>\n                                <Typography className={classnames(classes.text, filler ? classes.titles : null, filler ? \"animated-background\" : null)} variant={\"h6\"}>\n                                    Amino-acid predicted features\n                                </Typography>\n                            </Paper>\n                            <FeatureViewer data={this.state.features}/>\n                        </Paper>\n                        <ExpansionPanel>\n                            <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                                <Typography className={classnames(classes.text, filler ? classes.expansionPanels : null, filler ? \"animated-background\" : null)}>\n                                    Secondary structure prediction (DSSP8)\n                                </Typography>\n                            </ExpansionPanelSummary>\n                            <ExpansionPanelDetails>\n                                <SequenceHighlighter string={features.predictedDSSP8} proteinColorScheme={proteinColorSchemes['dssp8']}/>\n                            </ExpansionPanelDetails>\n                        </ExpansionPanel>\n                        <ExpansionPanel>\n                            <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                                <Typography className={classnames(classes.text, filler ? classes.expansionPanels : null, filler ? \"animated-background\" : null)}>\n                                    Secondary structure prediction (DSSP3)\n                                </Typography>\n                            </ExpansionPanelSummary>\n                            <ExpansionPanelDetails>\n                                <SequenceHighlighter string={features.predictedDSSP3} proteinColorScheme={proteinColorSchemes['dssp8']}/>\n                            </ExpansionPanelDetails>\n                        </ExpansionPanel>\n                        <ExpansionPanel>\n                            <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                                <Typography className={classnames(classes.text, filler ? classes.expansionPanels : null, filler ? \"animated-background\" : null)}>\n                                    Disorder prediction\n                                </Typography>\n                            </ExpansionPanelSummary>\n                            <ExpansionPanelDetails>\n                                <SequenceHighlighter string={features.predictedDisorder} proteinColorScheme={proteinColorSchemes['disorder']}/>\n                            </ExpansionPanelDetails>\n                        </ExpansionPanel>\n                    </Grid>\n                </Grid>\n                }\n            </div>\n        );\n    }\n}\n\nFeatures.propTypes = {\n    classes: PropTypes.object.isRequired,\n    jobParameters: PropTypes.object\n};\n\nexport default storeComponentWrapper(withStyles(styles)(Features));","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Typography from \"@material-ui/core/Typography/Typography\"\nimport Grid from '@material-ui/core/Grid'\nimport SequenceInput from './SequenceInput'\nimport Cite from './Cite'\nimport SequenceStatus from \"./SequenceStatus\"\nimport Features from \"./Features\"\n\nconst styles = theme => ({\n    attribution: {\n        textAlign: \"center\",\n        marginTop: theme.spacing.unit * 2\n    },\n    root: {\n        maxWidth: 1100,\n        margin: \"auto\",\n        paddingLeft: theme.spacing.unit * 2,\n        paddingRight: theme.spacing.unit * 2\n    },\n    search: {\n        width: \"100%\"\n    },\n    textField: {\n        width: \"100%\",\n        textAlign: \"center\"\n    },\n    fadingComponents: {\n        transition: '.5s'\n    },\n});\n\nconst uniprotRegex = /^[OPQ][0-9][A-Z0-9]{3}[0-9]|[A-NR-Z][0-9]([A-Z][A-Z0-9]{2}[0-9]){1,2}$/;\n\n\nclass App extends React.Component {\n    state = {\n        query: '',\n        valid: true,\n        ready: false\n    };\n\n    timeout = null;\n\n    onQueryChange = (query) => {\n        if(uniprotRegex.test(query)){\n            this.setState({\n                valid: true,\n                ready: true\n            });\n        } else {\n            this.setState({\n                valid: false,\n            })\n        }\n    };\n\n    onInputChange = (event) => {\n        let value = event.target.value;\n\n        if(uniprotRegex.test(value)){\n            this.setState({\n                query: value,\n                ready: false\n            });\n            window.clearTimeout(this.timeout);\n            this.onQueryChange(value)\n        } else {\n            this.setState({\n                query: value,\n                ready: false\n            });\n\n            window.clearTimeout(this.timeout);\n            this.timeout = setTimeout(()=>{\n                this.onQueryChange(value)\n            }, 1000);\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <Grid container className={classes.root} spacing={0}>\n                <Grid item xs={12}>\n                    <Grid container className={classes.root} spacing={16}>\n                        <Grid item className={classes.search} xs={12}>\n                            <Grid item xl={12} md={12} xs={12} style={{textAlign: \"center\", marginTop: 30, marginBottom: 30}}>\n                                <Typography component={\"div\"} variant=\"h5\">\n                                    Predict protein properties from embeddings\n                                </Typography>\n                                {/*<Typography component={\"div\"} variant=\"body1\">*/}\n                                {/*    {\"Check out our pre-print \\\"Modeling the Language of Life – Deep Learning Protein Sequences\\\". \"}*/}\n                                {/*    <br/>*/}\n                                {/*    <a href=\"https://doi.org/10.1186/s12859-019-3220-8\" target={\"_blank\"} ref={\"author\"}>*/}\n                                {/*        Click here.*/}\n                                {/*    </a>*/}\n                                {/*</Typography>*/}\n                            </Grid>\n                        </Grid>\n                        <Grid item className={classes.search} xs={12}>\n                            <SequenceInput />\n                        </Grid>\n                        <Grid item className={classes.search} xs={12}>\n                            <SequenceStatus />\n                        </Grid>\n                        <Grid item className={classes.search} xs={12}>\n                            <Features />\n                        </Grid>\n                        <Grid item className={classes.search} xs={12}>\n                            <Cite/>\n                        </Grid>\n                        <Grid item className={classes.search} xs={12}>\n                            <Typography variant={\"caption\"} className={classes.attribution}>\n                                Website by <a rel=\"noopener noreferrer\" href=\"https://christian.dallago.us\" target=\"_blank\">Christian Dallago</a>.\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        );\n    }\n}\n\nApp.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import ReactGA from 'react-ga'\n\nconst options = {};\n\nconst trackPage = (page) => {\n    ReactGA.set({\n        page,\n        ...options\n    });\n    ReactGA.pageview(page)\n};\n\nlet currentPage = '';\n\nexport const analyticsPageMiddleware = store => next => action => {\n    if (action.type === '@@router/LOCATION_CHANGE') {\n        const nextPage = `${action.payload.pathname}${action.payload.search}`;\n\n        if (currentPage !== nextPage) {\n            currentPage = nextPage;\n            trackPage(nextPage)\n        }\n    }\n\n    return next(action)\n};","import { createStore , combineReducers, applyMiddleware } from 'redux';\nimport ReactGa from 'react-ga';\nimport { analyticsPageMiddleware } from './analyticsPageMiddleware';\n\nimport JobParameters from './JobParameters';\n\nfunction trackEventInGoogleAnalytics({ getState }) {\n    return next => action => {\n        if (action.type !== '@@router/UPDATE_LOCATION' && action.type !== '@@router/LOCATION_CHANGE' ){\n            ReactGa.event({\n                category: action.type,\n                action: JSON.stringify(action.payload)\n            });\n        }\n\n        return next(action);\n    };\n}\n\nconst reducer = combineReducers({\n    jobParameters: JobParameters,\n});\n\nconst store  = createStore(reducer, applyMiddleware(trackEventInGoogleAnalytics, analyticsPageMiddleware));\n\nexport { store };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.css';\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider'\nimport * as serviceWorker from './serviceWorker'\nimport { Provider } from 'react-redux'\nimport { store } from './stores/index'\nimport ReactGA from 'react-ga';\n\n\nReactGA.initialize(process.env.REACT_GA || \"UA-137257046-2\");\n\nReactDOM.render(\n    <Provider store={store}>\n        <MuiThemeProvider>\n            <App />\n        </MuiThemeProvider>\n    </Provider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}