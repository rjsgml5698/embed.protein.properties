{"version":3,"sources":["stores/jobDispatcher.js","stores/JobParameters.js","utils/ActionDelayer.js","components/SequenceInput.js","components/Cite.js","components/SequenceStatus.js","components/SequenceHighlighter.js","utils/Graphics.js","components/Features.js","components/App.js","serviceWorker.js","stores/analyticsPageMiddleware.js","stores/index.js","index.js"],"names":["connect","_ref","jobParameters","dispatch","bindActionCreators","action","a","status","INVALID","LOADING","NULL","MULTIPLESEQUENCES","FASTA","AA","UNIPROT","isValid","incomingStatus","needsIndexing","initial","proteinStatus","protein","undefined","JobParameters","state","arguments","length","type","Object","objectSpread","payload","GLOBAL_TTE","actions","SequenceInput","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","loadSequence","event","fillerProtein","Protein","setUniprotData","accession","setState","proteinSequenceInput","jobParametersAction","proteinStatusAction","handleChange","bind","assertThisInitialized","deleyedKeyUp","_this2","textInput","retrievingFunction","autodetect","then","_ref2","slicedToArray","proteins","uniprotData","parser","validInput","parsers","fasta","protein_name","aa","console","error","catch","e","signature","TTE","target","value","clearTimeout","setTimeout","classes","react_default","createElement","Paper_default","square","elevation","className","paper","core_Typography_default","variant","container","noValidate","autoComplete","TextField_default","id","multiline","data-gramm_editor","textField","onChange","margin","autoFocus","component","classnames","underline","onClick","React","Component","storeComponentWrapper","withStyles","theme","display","flexWrap","width","height","mixins","gutters","paddingTop","paddingBottom","textDecoration","Cite","root","title","overflowX","textAlign","spacing","unit","paddingLeft","paddingRight","cursor","topSpace","SequenceStatus","nextProps","grid","avatar","Avatar_default","greenAvatar","Check_default","content","color","rel","href","CardHeader_default","subheader","redAvatar","Close_default","CircularProgress_default","grayLoading","orangeAvatar","InfoOutlined_default","backgroundColor","green","red","orange","alignItems","flex","marginRight","SequenceHighlighter","get10mersAsReactComponents","string","replace","toUpperCase","split","filter","Boolean","map","ten_emer","position","pos","key","style","slice","toConsumableArray","letter","border","fontSize","borderStyle","borderColor","proteinColorScheme","breakMersAsReactComponents","reactComponentsArray","size","newArr","push","splice","elements","selected","region","highlightOnClick","newProps","proteinColorSchemes","dssp8","primary","+","G","H","I","B","E","S","T","C","contrast","disorder","-","X","mview",".","A","V","L","M","F","Y","W","P","K","R","D","Q","N","Z","?","*","U","ULR","placeholder","sequence","predictedSubcellularLocalizations","predictedMembrane","predictedDSSP3","predictedDSSP8","predictedDisorder","Features","getFeatures","loading","fetch","method","mode","cache","credentials","headers","Content-Type","redirect","referrer","body","JSON","stringify","response","json","log","features","Grid_default","item","xs","LinearProgress_default","opacity","Typography_default","sequenceHighlighter","components_SequenceHighlighter","ExpansionPanel_default","ExpansionPanelSummary_default","expandIcon","ExpandMore_default","heading","ExpansionPanelDetails_default","uniprotRegex","App","query","valid","ready","timeout","onQueryChange","test","onInputChange","window","search","components_SequenceInput","components_SequenceStatus","components_Features","components_Cite","attribution","marginTop","maxWidth","fadingComponents","transition","location","hostname","match","options","currentPage","reducer","combineReducers","store","createStore","applyMiddleware","getState","next","ReactGa","category","nextPage","concat","pathname","page","ReactGA","set","pageview","initialize","process","REACT_GA","ReactDOM","render","es","MuiThemeProvider_default","components_App","document","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.4a1a79ec.chunk.js","sourcesContent":["import { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = ({ jobParameters }) =>\n    ({ jobParameters });\n\nconst mapDispatchToProps = function (dispatch) {\n    return bindActionCreators({\n        action: (a) => {\n            return a\n        },\n    }, dispatch)\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps);","const status = {\n    INVALID: 0,\n    LOADING: 2,\n    NULL: 3,\n\n    // Protein input type\n    MULTIPLESEQUENCES: 4,\n    FASTA: 5,\n    AA: 6,\n    UNIPROT: 7,\n\n    isValid: (incomingStatus) => {\n        return incomingStatus === status.UNIPROT || incomingStatus === status.AA || incomingStatus === status.FASTA ||\n            incomingStatus === status.MULTIPLESEQUENCES\n    },\n    needsIndexing: (incomingStatus) => {\n        return incomingStatus === status.AA || incomingStatus === status.FASTA || incomingStatus === status.MULTIPLESEQUENCES\n    },\n};\n\nconst initial = {\n    // sequenceInput component\n    proteinStatus: status.NULL,\n    protein: undefined,\n};\n\n\nfunction JobParameters(state = initial, action) {\n    switch (action.type) {\n        case 'SET_PROTEIN_STATUS':\n            return {\n                ...state,\n                proteinStatus: action.payload.proteinStatus\n            };\n        case 'SET_PROTEIN_OBJECT':\n            return {\n                ...state,\n                protein: action.payload.protein\n            };\n        case 'SET_JOB_PARAMETERS':\n            return {\n                ...state,\n                ...action.payload\n            };\n        case 'RESET_JOB_SUBMISSION':\n            return initial;\n\n        default:\n            return state;\n    }\n}\n\nexport default JobParameters;\n\nexport const proteinStatus = status;","/***\n *\n * The purpose of this file is to expose functions that allow for a certain action (a function) to happen at a delayed point in time.\n *\n * Actions are be rewritable, meaning that: if an action with the same signature is enqueued for execution,\n * it will cancel the execution of the previous enqueued action with the same signature.\n *\n * In other words: it is a collection of single-slot queues.\n */\n\n\n// Time elapsing in ms before an action is taken\nconst GLOBAL_TTE = 1000;\n\nlet actions = {};\n\n\n/***\n *\n * @param signature: unique key representing request\n * @param action: a function\n * @param TTE: time to execute in MS\n */\nexport default function delay(signature, action, TTE) {\n    if (actions[signature] !== null) {\n        clearTimeout(actions[signature]);\n    }\n\n    actions[signature] = setTimeout(() => {\n        action()\n    }, TTE || GLOBAL_TTE);\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { Protein, autodetect, validInput, parsers } from 'protein-parser';\nimport storeComponentWrapper from '../stores/jobDispatcher'\nimport {proteinStatus} from \"../stores/JobParameters\";\nimport delay from \"../utils/ActionDelayer\";\nimport classnames from 'classnames';\n\nconst styles = theme => ({\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    textField: {\n        width: \"100%\",\n        height: \"100%\"\n    },\n    paper: theme.mixins.gutters({\n        paddingTop: 16,\n        paddingBottom: 16\n    }),\n    underline: {\n        textDecoration: \"underline\"\n    }\n});\n\nclass SequenceInput extends React.Component {\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            proteinSequenceInput: ''\n        };\n\n        this.proteinStatusAction = \"SET_PROTEIN_STATUS\";\n        this.jobParametersAction = \"SET_JOB_PARAMETERS\";\n\n        this.handleChange = this.handleChange.bind(this);\n        this.deleyedKeyUp = this.deleyedKeyUp.bind(this);\n    }\n\n    componentWillUnmount(){\n        this.props.action({\n            type: \"RESET_JOB_SUBMISSION\"\n        });\n    }\n\n    handleChange() {\n        let textInput = this.state.proteinSequenceInput;\n\n        if(textInput.length < 3){\n            this.props.action({\n                type: this.proteinStatusAction,\n                payload: {\n                    proteinStatus: proteinStatus.INVALID\n                }\n            });\n            return;\n        }\n\n        // It's going to be !== undefined only if a valid sequence or UniProt accession\n        let retrievingFunction = autodetect(textInput);\n\n        if(retrievingFunction !== undefined){\n            retrievingFunction(textInput)\n                .then(([proteins, _]) => {\n                    if(proteins.length > 1 && proteins[0] !== undefined){\n                        if(proteins[0].uniprotData !== undefined){\n                            this.props.action({\n                                type: this.jobParametersAction,\n                                payload: {\n                                    protein: proteins[0],\n                                    proteinStatus: proteinStatus.UNIPROT\n                                }\n                            });\n                        } else {\n                            this.props.action({\n                                type: this.jobParametersAction,\n                                payload: {\n                                    protein: proteins[0],\n                                    proteinStatus: proteinStatus.MULTIPLESEQUENCES\n                                }\n                            });\n                        }\n                    } else if(proteins[0] !== undefined){\n\n                        let parser = validInput(textInput);\n\n                        if(parser === parsers.accession){\n                            this.props.action({\n                                type: this.jobParametersAction,\n                                payload: {\n                                    protein: proteins[0],\n                                    proteinStatus: proteinStatus.UNIPROT\n                                }\n                            });\n                        } else if(parser === parsers.fasta){\n                            if(proteins[0].uniprotData !== undefined){\n                                this.props.action({\n                                    type: this.jobParametersAction,\n                                    payload: {\n                                        protein: proteins[0],\n                                        proteinStatus: proteinStatus.UNIPROT\n                                    }\n                                });\n                            } else {\n                                this.props.action({\n                                    type: this.jobParametersAction,\n                                    payload: {\n                                        protein: proteins[0],\n                                        proteinStatus: proteinStatus.FASTA\n                                    }\n                                });\n                            }\n                        } else if(parser === parsers.protein_name){\n                            this.props.action({\n                                type: this.jobParametersAction,\n                                payload: {\n                                    protein: proteins[0],\n                                    proteinStatus: proteinStatus.UNIPROT\n                                }\n                            });\n                        } else if(parser === parsers.aa){\n                            this.props.action({\n                                type: this.jobParametersAction,\n                                payload: {\n                                    protein: proteins[0],\n                                    proteinStatus: proteinStatus.AA\n                                }\n                            });\n                        } else {\n                            console.error(\"Unexpected error when validating protein retrieving function\");\n                            this.props.action({\n                                type: \"SET_PROTEIN_STATUS\",\n                                payload: {\n                                    proteinStatus: proteinStatus.INVALID\n                                }\n                            });\n                        }\n                    } else {\n\n                        this.props.action({\n                            type: this.jobParametersAction,\n                            payload: {\n                                proteinStatus: proteinStatus.INVALID\n                            }\n                        });\n                    }\n                })\n                .catch((e) => {\n                    console.error(e);\n\n                    this.props.action({\n                        type: this.jobParametersAction,\n                        payload: {\n                            proteinStatus: proteinStatus.INVALID\n                        }\n                    });\n                });\n        } else {\n            this.props.action({\n                type: this.jobParametersAction,\n                payload: {\n                    proteinStatus: proteinStatus.INVALID\n                }\n            });\n        }\n    }\n\n    loadSequence = type => event => {\n        let fillerProtein =  new Protein(\"MALLHSARVLSGVASAFHPGLAAAASARASSWWAHVEMGPPDPILGVTEAYKRDTNSKKMNLGVGAYRDDNGKPYVLPSVRKAEAQIAAKGLDKEYLPIGGLAEFCRASAELALGENSEVVKSGRFVTVQTISGTGALRIGASFLQRFFKFSRDVFLPKPSWGNHTPIFRDAGMQLQSYRYYDPKTCGFDFTGALEDISKIPEQSVLLLHACAHNPTGVDPRPEQWKEIATVVKKRNLFAFFDMAYQGFASGDGDKDAWAVRHFIEQGINVCLCQSYAKNMGLYGERVGAFTVICKDADEAKRVESQLKILIRPMYSNPPIHGARIASTILTSPDLRKQWLQEVKGMADRIIGMRTQLVSNLKKEGSTHSWQHITDQIGMFCFTGLKPEQVERLTKEFSIYMTKDGRISVAGVTSGNVGYLAHAIHQVTK\");\n\n        fillerProtein.setUniprotData({\n            accession: \"P12345\"\n        });\n\n        switch (type) {\n            case 'fasta':\n                this.setState({\n                    proteinSequenceInput: `>My sequence\nMALLHSARVLSGVASAFHPGLAAAASARASSWWAHVEMGPPDPILGVTEAYKRDTNSKKM\nNLGVGAYRDDNGKPYVLPSVRKAEAQIAAKGLDKEYLPIGGLAEFCRASAELALGENSEV\nVKSGRFVTVQTISGTGALRIGASFLQRFFKFSRDVFLPKPSWGNHTPIFRDAGMQLQSYR\nYYDPKTCGFDFTGALEDISKIPEQSVLLLHACAHNPTGVDPRPEQWKEIATVVKKRNLFA\nFFDMAYQGFASGDGDKDAWAVRHFIEQGINVCLCQSYAKNMGLYGERVGAFTVICKDADE\nAKRVESQLKILIRPMYSNPPIHGARIASTILTSPDLRKQWLQEVKGMADRIIGMRTQLVS\nNLKKEGSTHSWQHITDQIGMFCFTGLKPEQVERLTKEFSIYMTKDGRISVAGVTSGNVGY\nLAHAIHQVTK`,\n                });\n                this.props.action({\n                    type: this.jobParametersAction,\n                    payload: {\n                        proteinStatus: proteinStatus.FASTA,\n                        protein: fillerProtein\n                    }\n                });\n                break;\n\n            case 'aa':\n                this.setState({\n                    proteinSequenceInput: \"MALLHSARVLSGVASAFHPGLAAAASARASSWWAHVEMGPPDPILGVTEAYKRDTNSKKMNLGVGAYRDDNGKPYVLPSVRKAEAQIAAKGLDKEYLPIGGLAEFCRASAELALGENSEVVKSGRFVTVQTISGTGALRIGASFLQRFFKFSRDVFLPKPSWGNHTPIFRDAGMQLQSYRYYDPKTCGFDFTGALEDISKIPEQSVLLLHACAHNPTGVDPRPEQWKEIATVVKKRNLFAFFDMAYQGFASGDGDKDAWAVRHFIEQGINVCLCQSYAKNMGLYGERVGAFTVICKDADEAKRVESQLKILIRPMYSNPPIHGARIASTILTSPDLRKQWLQEVKGMADRIIGMRTQLVSNLKKEGSTHSWQHITDQIGMFCFTGLKPEQVERLTKEFSIYMTKDGRISVAGVTSGNVGYLAHAIHQVTK\",\n                });\n                this.props.action({\n                    type: this.jobParametersAction,\n                    payload: {\n                        proteinStatus: proteinStatus.AA,\n                        protein: fillerProtein\n                    }\n                });\n                break;\n\n            case 'accession':\n                this.setState({\n                    proteinSequenceInput: \"P12345\",\n                });\n                this.props.action({\n                    type: this.jobParametersAction,\n                    payload: {\n                        proteinStatus: proteinStatus.UNIPROT,\n                        protein: fillerProtein\n                    }\n                });\n                break;\n            case 'protein_name':\n                this.setState({\n                    proteinSequenceInput: \"AATM_RABIT\",\n                });\n                this.props.action({\n                    type: this.jobParametersAction,\n                    payload: {\n                        proteinStatus: proteinStatus.UNIPROT,\n                        protein: fillerProtein\n                    }\n                });\n                break;\n            default:\n                break;\n        }\n    };\n\n    deleyedKeyUp(event) {\n\n        this.setState({\n            proteinSequenceInput: event.target.value\n        });\n\n        if(this.props.jobParameters.proteinStatus !== proteinStatus.LOADING){\n            this.props.action({\n                type: this.proteinStatusAction,\n                payload: {\n                    proteinStatus: proteinStatus.LOADING\n                }\n            });\n        }\n\n        delay(\"SEQUENCE_INPUT_CHANGE\", this.handleChange, 1000);\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <Paper square elevation={2} className={classes.paper}>\n                <Typography variant=\"h6\">\n                    Sequence:\n                </Typography>\n                <form className={classes.container} noValidate autoComplete=\"off\">\n                    <TextField\n                        id=\"proteinSequenceInput\"\n                        multiline\n                        data-gramm_editor={false}\n                        className={classes.textField}\n                        value={this.state.proteinSequenceInput}\n                        onChange={this.deleyedKeyUp}\n                        margin=\"normal\"\n                        autoFocus\n                    />\n                </form>\n                <Typography component={\"div\"} variant=\"body1\">\n                    {'Sequence can be in '}\n                    <strong className={classnames(\"pointer\", classes.underline)} onClick={this.loadSequence('fasta')}>{\"FASTA format\"}</strong>\n                    {', a '}\n                    <strong className={classnames(\"pointer\", classes.underline)} onClick={this.loadSequence('accession')}>{\"UniProt Accession\"}</strong>\n                    {' number or '}\n                    <strong className={classnames(\"pointer\", classes.underline)} onClick={this.loadSequence('protein_name')}>{\"UniProt Protein Name\"}</strong>\n                    {', or  '}\n                    <strong className={classnames(\"pointer\", classes.underline)} onClick={this.loadSequence('aa')}>{\"AA sequence\"}</strong>\n                    .\n                </Typography>\n                <Typography component={\"div\"} variant=\"caption\">\n                    Click the bold text for examples.\n                </Typography>\n            </Paper>\n        );\n    }\n}\n\nSequenceInput.propTypes = {\n    action: PropTypes.func,\n    classes: PropTypes.object.isRequired,\n    jobParameters: PropTypes.object\n};\n\nexport default storeComponentWrapper(withStyles(styles)(SequenceInput));","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = theme => ({\n    root: {\n        overflowX: 'auto',\n        textAlign: \"center\",\n        paddingBottom: theme.spacing.unit,\n        paddingLeft: theme.spacing.unit*5,\n        paddingRight: theme.spacing.unit*5\n    },\n    underline: {\n        textDecoration: \"underline\",\n        cursor: \"pointer\"\n    },\n    title: {\n        paddingTop: theme.spacing.unit\n    },\n    topSpace: {\n        paddingTop: theme.spacing.unit*2,\n        paddingBottom: theme.spacing.unit\n\n    }\n});\n\nclass Cite extends React.Component {\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <Paper className={classes.root}>\n                <Typography className={classes.title} variant={\"h6\"}>\n                    Cite\n                </Typography>\n                <pre>\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam ultrices neque eget lorem commodo, quis feugiat mi finibus. Fusce blandit porttitor porta. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Sed erat arcu, consectetur id ornare et, eleifend id urna. Integer accumsan fermentum nibh, ut rutrum purus lobortis quis. Aliquam iaculis mauris id viverra rutrum. Mauris lacinia mi dui, at tempus purus vestibulum sit amet. Morbi malesuada id neque et imperdiet. Nullam non urna sit amet urna efficitur volutpat vitae vel nisi. Suspendisse potenti. Aenean volutpat sagittis quam, at gravida purus accumsan et. Morbi cursus sodales pulvinar. Phasellus id odio in neque condimentum ullamcorper. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin euismod, ex fermentum tempus pretium, leo leo sodales risus, et lobortis nibh lectus a nunc. Duis erat ligula, porta vitae dui ut, lacinia consequat ex.\n                </pre>\n            </Paper>\n        );\n    }\n}\n\nCite.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Cite);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport storeComponentWrapper from '../stores/jobDispatcher';\nimport { proteinStatus } from \"../stores/JobParameters\";\nimport Paper from '@material-ui/core/Paper';\nimport Avatar from '@material-ui/core/Avatar';\nimport Check from '@material-ui/icons/Check';\nimport Close from '@material-ui/icons/Close';\nimport Info from '@material-ui/icons/InfoOutlined';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Typography from '@material-ui/core/Typography';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport green from '@material-ui/core/colors/green';\nimport red from '@material-ui/core/colors/red';\nimport orange from '@material-ui/core/colors/orange';\n\nconst styles = theme => ({\n    greenAvatar: {\n        margin: 10,\n        color: '#fff',\n        backgroundColor: green[500],\n    },\n    redAvatar: {\n        margin: 10,\n        color: '#fff',\n        backgroundColor: red[500],\n    },\n    orangeAvatar: {\n        margin: 10,\n        color: '#fff',\n        backgroundColor: orange[500],\n    },\n    grayLoading: {\n        margin: 10,\n        color: '#aeaeae',\n        backgroundColor: 'inherit'\n    },\n    grid: theme.mixins.gutters({\n        display: 'flex',\n        alignItems: 'center',\n        paddingTop: theme.spacing.unit * 2,\n        paddingBottom: theme.spacing.unit * 2,\n    }),\n    avatar: {\n        flex: '0 0 auto',\n        marginRight: theme.spacing.unit * 2,\n    },\n    content: {\n        flex: '1 1 auto',\n    },\n});\n\n\nclass SequenceStatus extends React.Component {\n\n    constructor(props){\n        super(props);\n\n\n        this.state = {\n            proteinStatus: this.props.jobParameters.proteinStatus || proteinStatus.NULL,\n        };\n\n    }\n\n    componentWillReceiveProps(nextProps) {\n\n        let jobParameters = nextProps.jobParameters;\n\n        this.setState({\n            proteinStatus: jobParameters.proteinStatus,\n            protein: jobParameters.protein\n        })\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        switch (this.state.proteinStatus) {\n            case proteinStatus.UNIPROT:\n                return (<Paper square elevation={2} >\n                    <div className={classes.grid}>\n                        <div className={classes.avatar}>\n                            <Avatar className={classes.greenAvatar}>\n                                <Check />\n                            </Avatar>\n                        </div>\n                        <div className={classes.content}>\n                            <Typography variant={\"body2\"}\n                                        component=\"div\"\n                                        color=\"textSecondary\">\n                                Valid identifier passed. The sequence from {' '}\n                                <a\n                                    target=\"_blank\"\n                                    rel=\"noopener noreferrer\"\n                                    href={\"https://uniprot.org/uniprot/\" + (this.state.protein && this.state.protein.uniprotData ? this.state.protein.uniprotData.accession : \"P12345\")}>\n                                    {(this.state.protein && this.state.protein.uniprotData ? this.state.protein.uniprotData.accession : \"P12345\")}\n                                </a>\n                                {' '} will be used.\n                            </Typography>\n                        </div>\n                    </div>\n                </Paper>);\n            case proteinStatus.AA:\n            case proteinStatus.FASTA:\n                return (<Paper square elevation={2} >\n                    <CardHeader\n                        avatar={\n                            <Avatar className={classes.greenAvatar}>\n                                <Check />\n                            </Avatar>\n                        }\n                        subheader=\"Valid sequence passed.\"\n                    />\n                </Paper>);\n            case proteinStatus.INVALID:\n                return (<Paper square elevation={2} >\n                    <CardHeader\n                        avatar={\n                            <Avatar className={classes.redAvatar}>\n                                <Close />\n                            </Avatar>\n                        }\n                        subheader=\"Sorry, but it was not possible to identify your sequence or identifier.\"\n                    />\n                </Paper>);\n            case proteinStatus.LOADING:\n                return (<Paper square elevation={2} >\n                    <CardHeader\n                        avatar={\n                            <CircularProgress className={classes.grayLoading}/>\n                        }\n                        subheader=\"Checking validity.\"\n                    />\n                </Paper>);\n            case proteinStatus.MULTIPLESEQUENCES:\n                return (<Paper square elevation={2} >\n                    <CardHeader\n                        avatar={\n                            <Avatar className={classes.orangeAvatar}>\n                                <Check />\n                            </Avatar>\n                        }\n                        subheader=\"You inputted valid sequences, but only the first sequence will be considered.\"\n                    />\n                </Paper>);\n            default:\n                return <Paper square elevation={2} >\n                    <CardHeader\n                        avatar={\n                            <Avatar className={classes.grayLoading}>\n                                <Info />\n                            </Avatar>\n                        }\n                        subheader=\"Input a sequence to start!\"\n                    />\n                </Paper>\n        }\n    }\n}\n\nSequenceStatus.propTypes = {\n    classes: PropTypes.object.isRequired,\n    jobParameters: PropTypes.object\n};\n\nexport default storeComponentWrapper(withStyles(styles)(SequenceStatus));","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass SequenceHighlighter extends React.Component {\n\n    constructor(props){\n        super();\n\n        this.props = props;\n\n        this.state = {\n            selected: undefined,\n            region: [0,0],\n            highlightOnClick: false,\n            ...props\n        };\n    }\n\n    componentWillReceiveProps(newProps){\n        this.setState({\n            ...newProps\n        })\n    }\n\n    get10mersAsReactComponents = (string) => {\n        return string\n        // Remove spaces\n            .replace(/\\s/g,\"\")\n            // Make upper case\n            .toUpperCase()\n            // Split in 10-emers composed by letters\n            .split(/([A-Z|\\-|+]{10})/gm)\n            // Filter only populated 10-emers\n            .filter(Boolean)\n            // Append number to every 10-emer\n            .map( (ten_emer, position) => {\n                let pos = (position*10)+1;\n                return <span key={pos} style={{display: \"flex\"}}>\n                    <pre style={{margin:0}}>{\"      \".slice((\"\"+pos).length-6,6) + pos + ' '}</pre>\n                    {[...ten_emer].map((letter, position) => {\n\n                        let style = {\n                            margin:0,\n                            border: 0,\n                            fontSize: \"1.2rem\",\n                            borderStyle: \"solid\",\n                            borderColor: \"transparent\",\n                        };\n\n                        style.backgroundColor = this.state.proteinColorScheme['contrast'][letter];\n                        style.color = this.state.proteinColorScheme['primary'][letter];\n                        // style.borderStyle = \"solid\";\n\n                        return <pre style={style} key={position}>{letter}</pre>})}\n                </span>\n            })\n    };\n\n\n    breakMersAsReactComponents = (reactComponentsArray, size=1) => {\n        let newArr = [];\n        while(reactComponentsArray.length) newArr.push(reactComponentsArray.splice(0,size));\n\n        return newArr.map((elements, position) => <div key={position}>\n            {elements.map(e => e)}\n        </div>);\n    };\n\n    render() {\n        const { string } = this.props;\n\n        return (\n            <div style={{display: \"flex\", flexWrap: \"wrap\"}}>\n                {this.breakMersAsReactComponents(this.get10mersAsReactComponents(string)).map(e => e)}\n            </div>\n        )\n    }\n}\n\n\nSequenceHighlighter.propTypes = {\n    string: PropTypes.string.isRequired,\n    proteinColorScheme: PropTypes.object.isRequired\n};\n\nexport default SequenceHighlighter;","export const proteinColorSchemes = {\n    dssp8: {\n        primary : {\n            // placeholder\n            '+':'#ededed',\n\n            'G':'#ededed',\n            'H':'#ededed',\n            'I':'#ededed',\n            'B':'#ededed',\n            'E':'#ededed',\n            'S':'#ededed',\n            'T':'#ededed',\n            'C':'#ededed',\n        },\n        contrast : {\n            // placeholder\n            '+':'#ededed',\n\n            'G':'#8ad970',\n            'H':'#ccd96a',\n            'I':'#d99657',\n            'B':'#d95633',\n            'E':'#d958aa',\n            'S':'#6d3bd9',\n            'T':'#3f54d9',\n            'C':'#4cd9c2',\n        }\n    },\n    disorder: {\n        primary : {\n            // placeholder\n            '+':'#ededed',\n\n            '-':'#ededed',\n            'X':'#505050',\n        },\n        contrast : {\n            // placeholder\n            '+':'#ededed',\n\n            '-':'#ededed',\n            'X':'#505050',\n        }\n    },\n    mview: {\n        primary : {\n            // placeholder\n            '+':'#ededed',\n\n            '.':'#fafafa',\n            '-':'#fafafa',\n            'G':'#33cc00',\n            'A':'#33cc00',\n            'I':'#33cc00',\n            'V':'#33cc00',\n            'L':'#33cc00',\n            'M':'#33cc00',\n            'F':'#009900',\n            'Y':'#009900',\n            'W':'#009900',\n            'H':'#009900',\n            'C':'#ffff00',\n            'P':'#33cc00',\n            'K':'#cc0000',\n            'R':'#cc0000',\n            'D':'#0033ff',\n            'E':'#0033ff',\n            'Q':'#6600cc',\n            'N':'#6600cc',\n            'S':'#0099ff',\n            'T':'#0099ff',\n            'B':'#666666',\n            'Z':'#666666',\n            'X':'#666666',\n            '?':'#999999',\n            '*':'#666666',\n            'U':'#000000'\n        },\n        contrast : {\n            // placeholder\n            '+':'#ededed',\n\n            '.':'#fafafa',\n            '-':'#fafafa',\n            'G':'#fafafa',\n            'A':'#fafafa',\n            'I':'#fafafa',\n            'V':'#fafafa',\n            'L':'#fafafa',\n            'M':'#fafafa',\n            'F':'#fafafa',\n            'Y':'#fafafa',\n            'W':'#fafafa',\n            'H':'#fafafa',\n            'C':'#505050',\n            'P':'#fafafa',\n            'K':'#fafafa',\n            'R':'#fafafa',\n            'D':'#fafafa',\n            'E':'#fafafa',\n            'Q':'#fafafa',\n            'N':'#fafafa',\n            'S':'#fafafa',\n            'T':'#fafafa',\n            'B':'#fafafa',\n            'Z':'#fafafa',\n            'X':'#fafafa',\n            '?':'#fafafa',\n            '*':'#fafafa',\n            'U':'#fafafa'\n        }\n    },\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport storeComponentWrapper from '../stores/jobDispatcher';\nimport { proteinStatus } from \"../stores/JobParameters\";\nimport Paper from '@material-ui/core/Paper';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Grid from '@material-ui/core/Grid';\nimport LinearProgress from \"@material-ui/core/LinearProgress/LinearProgress\";\nimport SequenceHighlighter from \"./SequenceHighlighter\";\nimport {proteinColorSchemes} from \"../utils/Graphics\";\nimport Typography from \"@material-ui/core/Typography/Typography\";\n// import FeatureViewer from 'feature-viewer/dist/feature-viewer.nextprot'\n\nconst styles = theme => ({\n    root: {\n        overflowX: 'auto',\n        textAlign: \"center\",\n        paddingTop: theme.spacing.unit,\n        paddingBottom: theme.spacing.unit\n    },\n    sequenceHighlighter: {\n        margin: 'auto',\n        paddingTop: theme.spacing.unit,\n        paddingLeft: theme.spacing.unit*3,\n        paddingRight: theme.spacing.unit*3,\n        paddingBottom: theme.spacing.unit,\n\n    },\n});\n\nconst ULR = \"https://api.embed.protein.properties/features\";\n\nconst placeholder = {\n    sequence: \"+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\",\n    predictedSubcellularLocalizations: \"++++++++++++++\",\n    predictedMembrane: \"++++++++++++\",\n    predictedDSSP3: \"+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\",\n    predictedDSSP8: \"+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\",\n    predictedDisorder: \"+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\",\n};\n\n\nclass Features extends React.Component {\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            proteinStatus: this.props.jobParameters.proteinStatus || proteinStatus.NULL,\n            sequence: null,\n            features: null,\n            loading: false\n        };\n    }\n\n    componentDidMount(){\n        // this.ft = new FeatureViewer(this.state.sequence,\n        //     '#fv1',\n        //     {\n        //         showAxis: true,\n        //         showSequence: true,\n        //         brushActive: true, //zoom\n        //         toolbar:true, //current zoom & mouse position\n        //         bubbleHelp:true,\n        //         zoomMax:50 //define the maximum range of the zoom\n        //     });\n    }\n\n    getFeatures = (sequence) => {\n        this.setState({\n            loading: true\n        }, () => {\n            fetch(ULR, {\n                method: \"POST\", // *GET, POST, PUT, DELETE, etc.\n                mode: \"cors\", // no-cors, cors, *same-origin\n                cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n                credentials: \"same-origin\", // include, *same-origin, omit\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                redirect: \"follow\", // manual, *follow, error\n                referrer: \"no-referrer\", // no-referrer, *client\n                body: JSON.stringify({\n                    \"sequence\": sequence\n                }), // body data type must match \"Content-Type\" header\n            })\n                .then(response => response.json())\n                .then(json => {\n                    console.log(json);\n                    this.setState({\n                        features: json,\n                        loading: false\n                    })\n                })\n                .catch(e => {\n                    console.error(e);\n                    this.setState({\n                        loading: false\n                    })\n                })\n            ;\n        });\n    };\n\n    componentWillReceiveProps(nextProps) {\n        let jobParameters = nextProps.jobParameters;\n\n        switch (jobParameters.proteinStatus) {\n            case proteinStatus.UNIPROT:\n            case proteinStatus.AA:\n            case proteinStatus.FASTA:\n            case proteinStatus.MULTIPLESEQUENCES:\n                this.getFeatures(jobParameters.protein.sequence);\n                break;\n            case proteinStatus.LOADING:\n            case proteinStatus.INVALID:\n            default:\n            // do nothing\n\n        }\n\n        this.setState({\n            proteinStatus: jobParameters.proteinStatus,\n            sequence: jobParameters.protein.sequence\n        });\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        let features = this.state.loading || this.state.features === null ? placeholder : this.state.features;\n\n        return (\n            <Grid container spacing={16}>\n                <Grid item xs={12}>\n                    <LinearProgress variant=\"query\" style={this.state.loading ? {opacity:1} : {opacity:0}}/>\n\n                    <Paper className={classes.root} elevation={2}>\n                        <Typography className={classes.title} variant={\"h6\"}>\n                            Your sequence\n                        </Typography>\n                        <div className={classes.sequenceHighlighter}>\n                            <SequenceHighlighter string={this.state.loading || this.state.sequence === null ? placeholder.sequence : this.state.sequence} proteinColorScheme={proteinColorSchemes['mview']}/>\n                        </div>\n                    </Paper>\n                </Grid>\n                <Grid item xs={12}>\n                    <Paper className={classes.root} elevation={2}>\n                        <Grid container spacing={0}>\n                            <Grid item xs={12}>\n                                <Paper className={classes.root} elevation={0}>\n                                    <Typography className={classes.title} variant={\"h6\"}>\n                                        Global predicted features\n                                    </Typography>\n                                </Paper>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <Paper className={classes.root} elevation={0}>\n                                    <Typography className={classes.title} variant={\"caption\"}>\n                                        Sub-cellular location\n                                    </Typography>\n                                    <Typography className={classes.title} variant={\"h6\"}>\n                                        {features.predictedSubcellularLocalizations}\n                                    </Typography>\n                                </Paper>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <Paper className={classes.root} elevation={0}>\n                                    <Typography className={classes.title} variant={\"caption\"}>\n                                        Membrane bound\n                                    </Typography>\n                                    <Typography className={classes.title} variant={\"h6\"}>\n                                        {features.predictedMembrane}\n                                    </Typography>\n                                </Paper>\n                            </Grid>\n                        </Grid>\n                    </Paper>\n                </Grid>\n                <Grid item xs={12}>\n                    <Paper className={classes.root} elevation={2}>\n                        <Typography className={classes.title} variant={\"h6\"}>\n                            Amino-acid predicted features\n                        </Typography>\n                    </Paper>\n                    <div id=\"fv1\"/>\n                </Grid>\n                <Grid item xs={12}>\n                    <ExpansionPanel>\n                        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                            <Typography className={classes.heading}>Expand to see secondary structure prediction (DSSP8)</Typography>\n                        </ExpansionPanelSummary>\n                        <ExpansionPanelDetails>\n                            <SequenceHighlighter string={features.predictedDSSP8} proteinColorScheme={proteinColorSchemes['dssp8']}/>\n                        </ExpansionPanelDetails>\n                    </ExpansionPanel>\n                    <ExpansionPanel>\n                        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                            <Typography className={classes.heading}>Expand to see secondary structure prediction (DSSP3)</Typography>\n                        </ExpansionPanelSummary>\n                        <ExpansionPanelDetails>\n                            <SequenceHighlighter string={features.predictedDSSP8} proteinColorScheme={proteinColorSchemes['dssp8']}/>\n                        </ExpansionPanelDetails>\n                    </ExpansionPanel>\n                    <ExpansionPanel>\n                        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                            <Typography className={classes.heading}>Expand to see disorder prediction</Typography>\n                        </ExpansionPanelSummary>\n                        <ExpansionPanelDetails>\n                            <SequenceHighlighter string={features.predictedDisorder} proteinColorScheme={proteinColorSchemes['disorder']}/>\n                        </ExpansionPanelDetails>\n                    </ExpansionPanel>\n                </Grid>\n            </Grid>\n        );\n    }\n}\n\nFeatures.propTypes = {\n    classes: PropTypes.object.isRequired,\n    jobParameters: PropTypes.object\n};\n\nexport default storeComponentWrapper(withStyles(styles)(Features));","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Typography from \"@material-ui/core/Typography/Typography\"\nimport Grid from '@material-ui/core/Grid'\nimport SequenceInput from './SequenceInput'\nimport Cite from './Cite'\nimport SequenceStatus from \"./SequenceStatus\"\nimport Features from \"./Features\"\n\nconst styles = theme => ({\n    attribution: {\n        textAlign: \"center\",\n        marginTop: theme.spacing.unit * 2\n    },\n    root: {\n        maxWidth: 1100,\n        margin: \"auto\",\n        paddingLeft: theme.spacing.unit * 2,\n        paddingRight: theme.spacing.unit * 2\n    },\n    search: {\n        width: \"100%\"\n    },\n    textField: {\n        width: \"100%\",\n        textAlign: \"center\"\n    },\n    fadingComponents: {\n        transition: '.5s'\n    },\n});\n\nconst uniprotRegex = /^[OPQ][0-9][A-Z0-9]{3}[0-9]|[A-NR-Z][0-9]([A-Z][A-Z0-9]{2}[0-9]){1,2}$/;\n\n\nclass App extends React.Component {\n    state = {\n        query: '',\n        valid: true,\n        ready: false\n    };\n\n    timeout = null;\n\n    onQueryChange = (query) => {\n        if(uniprotRegex.test(query)){\n            this.setState({\n                valid: true,\n                ready: true\n            });\n        } else {\n            this.setState({\n                valid: false,\n            })\n        }\n    };\n\n    onInputChange = (event) => {\n        let value = event.target.value;\n\n        if(uniprotRegex.test(value)){\n            this.setState({\n                query: value,\n                ready: false\n            });\n            window.clearTimeout(this.timeout);\n            this.onQueryChange(value)\n        } else {\n            this.setState({\n                query: value,\n                ready: false\n            });\n\n            window.clearTimeout(this.timeout);\n            this.timeout = setTimeout(()=>{\n                this.onQueryChange(value)\n            }, 1000);\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <Grid container className={classes.root} spacing={0}>\n                <Grid item xs={12}>\n                    <Grid container className={classes.root} spacing={16}>\n                        <Grid item className={classes.search} xs={12}>\n                            <SequenceInput />\n                        </Grid>\n                        <Grid item className={classes.search} xs={12}>\n                            <SequenceStatus />\n                        </Grid>\n                        <Grid item className={classes.search} xs={12}>\n                            <Features />\n                        </Grid>\n                        <Grid item className={classes.search} xs={12}>\n                            <Cite/>\n                        </Grid>\n                        <Grid item className={classes.search} xs={12}>\n                            <Typography variant={\"caption\"} className={classes.attribution}>\n                                Website by <a rel=\"noopener noreferrer\" href=\"https://christian.dallago.us\" target=\"_blank\">Christian Dallago</a>.\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        );\n    }\n}\n\nApp.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import ReactGA from 'react-ga'\n\nconst options = {};\n\nconst trackPage = (page) => {\n    ReactGA.set({\n        page,\n        ...options\n    });\n    ReactGA.pageview(page)\n};\n\nlet currentPage = '';\n\nexport const analyticsPageMiddleware = store => next => action => {\n    if (action.type === '@@router/LOCATION_CHANGE') {\n        const nextPage = `${action.payload.pathname}${action.payload.search}`;\n\n        if (currentPage !== nextPage) {\n            currentPage = nextPage;\n            trackPage(nextPage)\n        }\n    }\n\n    return next(action)\n};","import { createStore , combineReducers, applyMiddleware } from 'redux';\nimport ReactGa from 'react-ga';\nimport { analyticsPageMiddleware } from './analyticsPageMiddleware';\n\nimport JobParameters from './JobParameters';\n\nfunction trackEventInGoogleAnalytics({ getState }) {\n    return next => action => {\n        if (action.type !== '@@router/UPDATE_LOCATION' && action.type !== '@@router/LOCATION_CHANGE' ){\n            ReactGa.event({\n                category: action.type,\n                action: JSON.stringify(action.payload)\n            });\n        }\n\n        return next(action);\n    };\n}\n\nconst reducer = combineReducers({\n    jobParameters: JobParameters,\n});\n\nconst store  = createStore(reducer, applyMiddleware(trackEventInGoogleAnalytics, analyticsPageMiddleware));\n\nexport { store };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.css';\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider'\nimport * as serviceWorker from './serviceWorker'\nimport { Provider } from 'react-redux'\nimport { store } from './stores/index'\nimport ReactGA from 'react-ga';\n\n\nReactGA.initialize(process.env.REACT_GA || \"UA-137257046-2\");\n\nReactDOM.render(\n    <Provider store={store}>\n        <MuiThemeProvider>\n            <App />\n        </MuiThemeProvider>\n    </Provider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}